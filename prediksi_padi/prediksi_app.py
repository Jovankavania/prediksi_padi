# -*- coding: utf-8 -*-
"""prediksi_app

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_vBlaUf252pdbmWIHwESvTgj_m2XW3A4
"""

import streamlit as st
import pandas as pd
import joblib
import matplotlib.pyplot as plt
import numpy as np

st.title("üåæ Prediksi Produksi Padi ‚Äì Growth Projection")

# 1. Upload file Excel
uploaded_file = st.file_uploader("Unggah data historis (Excel)", type=["xlsx"])

if uploaded_file is not None:
    df_pred = pd.read_excel(uploaded_file)
    st.write("‚úÖ Data berhasil dimuat:")
    st.dataframe(df_pred.head())

    # 2. Load model
    model = joblib.load("prediksi_padi/model_rf.pkl")

    # 3. Tahun terakhir
    last_year = df_pred["Tahun"].max()
    st.write(f"Data terakhir tersedia: **{last_year}**")

    if st.button("üîÆ Proyeksikan Tahun Berikutnya"):
        # hitung growth rata-rata
        growth = (
            df_pred[df_pred["Tahun"].between(last_year-2, last_year)]
            .groupby("Kecamatan")[["Luas Sawah","Luas Tanam","Luas Panen","Produktivitas Padi"]]
            .pct_change()
            .groupby(df_pred["Kecamatan"]).mean()
        )

        df_last = df_pred[df_pred["Tahun"] == last_year].set_index("Kecamatan")
        df_proj = df_last.copy()
        df_proj[["Luas Sawah","Luas Tanam","Luas Panen","Produktivitas Padi"]] *= (1 + growth)

        df_proj["Tahun"] = last_year + 1
        df_proj = df_proj.reset_index()

        # fitur turunan
        df_proj["Rasio_Tanam"] = df_proj["Luas Panen"] / (df_proj["Luas Tanam"]+1e-9)
        df_proj["Intensitas_Sawah"] = df_proj["Luas Tanam"] / (df_proj["Luas Sawah"]+1e-9)
        df_proj["Prod_Ekspektasi"] = df_proj["Luas Panen"] * df_proj["Produktivitas Padi"]

        # prediksi
        X_proj = df_proj.drop(columns=["Tahun","Produksi"], errors="ignore")
        y_pred_proj = model.predict(X_proj)
        df_proj["Prediksi Produksi"] = y_pred_proj.round(0)

        st.success(f"‚úÖ Prediksi Produksi Padi Tahun {last_year+1}")
        st.dataframe(df_proj[["Kecamatan","Tahun","Prediksi Produksi"]])
        st.write("üìä Total Produksi:", int(df_proj["Prediksi Produksi"].sum()))

        # === VISUALISASI (side-by-side) ===
        df_actual = df_last.reset_index()[["Kecamatan"]].copy()
        df_actual["Tahun"] = last_year
        df_actual["Produksi"] = df_last["Produksi"].values

        df_prediksi = df_proj[["Kecamatan","Tahun","Prediksi Produksi"]].rename(
            columns={"Prediksi Produksi": "Produksi"}
        )

        df_vis = pd.concat([df_actual, df_prediksi])

        # urutkan kecamatan dari produksi aktual terbesar
        order = df_actual.sort_values("Produksi", ascending=False)["Kecamatan"]
        pivot_df = df_vis.pivot(index="Kecamatan", columns="Tahun", values="Produksi").reindex(order)

        x = np.arange(len(pivot_df.index))
        width = 0.35

        fig, ax = plt.subplots(figsize=(12,6))
        rects1 = ax.bar(x - width/2, pivot_df[last_year], width, label=f"{last_year} (Aktual)")
        rects2 = ax.bar(x + width/2, pivot_df[last_year+1], width, label=f"{last_year+1} (Prediksi)")

        ax.set_ylabel("Produksi Padi (kw)")
        ax.set_title(f"Perbandingan Produksi Padi {last_year} (Aktual) vs {last_year+1} (Prediksi, Growth-based)")
        ax.set_xticks(x)
        ax.set_xticklabels(pivot_df.index, rotation=45, ha="right")
        ax.legend()

        st.pyplot(fig)

else:
    st.info("‚¨ÜÔ∏è Silakan unggah file Excel untuk mulai prediksi.")
